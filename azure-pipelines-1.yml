# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none
variables:
  IISWebsiteName: dotnetApp

resources:
  pipelines:
    - pipeline: 'buildPipeline'
      # project: 'dotnetapp'
      source: 'Build Pipeline'
      branch: 'main'
      trigger: true
stages:
    - stage: DeployApp
      displayName: 'Deploy App'
      pool:
        vmImage: windows-latest
      jobs:
          - deployment: Deployapp
            displayName: 'Deploy Dotnet App'
            environment: 'dev.WIN-VM'
            strategy:
             runOnce:
                 deploy:
                   steps:
                       - checkout: none

                       - download: 'buildPipeline'
                         name: 'DownloadArtifact'
                         displayName: 'Download Artifact'
                         artifact: 'drop'
                       - task: ExtractFiles@1
                         inputs:
                           archiveFilePatterns: 'C:\azagent\A1\_work\1\buildPipeline\drop\*.zip'
                           destinationFolder: '$(pipeline.workspace)\a'
                           cleanDestinationFolder: true
                           overwriteExistingFiles: false
                       - task: IISWebAppManagementOnMachineGroup@0
                         name: 'StopService'
                         displayName: 'Stop Service'
                         inputs:
                           IISDeploymentType: 'IISWebsite'
                           ActionIISWebsite: 'StopWebsite'
                           StartStopWebsiteName: '${{ variables.IISWebsiteName }}'
                       - task: IISWebAppDeploymentOnMachineGroup@0
                         name: 'DeployApp'
                         displayName: 'Deploy Application'
                         inputs:
                           WebSiteName: '${{ variables.IISWebsiteName }}'
                           Package: '$(pipeline.workspace)\a'
                           TakeAppOfflineFlag: true
                       - task: IISWebAppDeploymentOnMachineGroup@0
                         name: 'DeployAppRetry'
                         condition: failed()
                         displayName: 'Deploy Application Retry If Failed'
                         inputs:
                           WebSiteName: '${{ variables.IISWebsiteName }}'
                           Package: '$(pipeline.workspace)\a'
                           TakeAppOfflineFlag: true
                           
                       - task: IISWebAppManagementOnMachineGroup@0
                         name: 'StartService'
                         displayName: 'Start Service'
                         inputs:
                           IISDeploymentType: 'IISWebsite'
                           ActionIISWebsite: 'StartWebsite'
                           StartStopWebsiteName: '${{ variables.IISWebsiteName }}'
